[versions]
managed-azure-sdk = "1.2.19"
managed-azure-functions-java-library = "3.1.0"
managed-azure-cosmos = "4.54.0"

jakarta-inject-api = "2.0.1"
jetty-server = "11.0.18"
kotlin = "1.9.22"
system-lambda = "1.2.1"
testcontainers = "1.19.3"

# Micronaut
micronaut = "4.3.0"
micronaut-logging = "1.1.2"
micronaut-reactor = "3.2.1"
micronaut-serde = "2.7.0"
micronaut-servlet = "4.4.0"
micronaut-test = "4.1.1"
micronaut-validation = "4.2.0"

micronaut-gradle-plugin = "4.2.1"

micronaut-docs = "2.0.0"
groovy = "4.0.18"
spock = "2.3-groovy-4.0"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }

boms-azure-sdk = { module = "com.azure:azure-sdk-bom", version.ref = "managed-azure-sdk" }

micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-servlet = { module = "io.micronaut.servlet:micronaut-servlet-bom", version.ref = "micronaut-servlet" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }
gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }

managed-azure-functions-java-library = { module = "com.microsoft.azure.functions:azure-functions-java-library", version.ref = "managed-azure-functions-java-library" }
managed-azure-cosmos = { module = "com.azure:azure-cosmos", version.ref = "managed-azure-cosmos" }

azure-identity = { module = "com.azure:azure-identity" }
azure-security-keyvault-secrets = { module = "com.azure:azure-security-keyvault-secrets" }
azure-storage-common = { module = "com.azure:azure-storage-common" }
azure-storage-blob = { module = "com.azure:azure-storage-blob" }
groovy-all = { module = "org.apache.groovy:groovy-all", version.ref = "groovy" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject-api" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty-server" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
system-lambda = { module = "com.github.stefanbirkner:system-lambda", version.ref = "system-lambda" }

junit-jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine' }
junit-platform-engine = { module = "org.junit.platform:junit-platform-suite-engine" }

# TestContainers

testcontainers-azure = { module = "org.testcontainers:azure", version.ref = "testcontainers" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
