[versions]
managed-azure-sdk = "1.2.7"
managed-azure-functions-java-library = "1.4.2"
managed-azure-cosmos = "4.39.0"

jakarta-inject-api = "2.0.1"
jetty-server = "9.4.49.v20220914"
kotlin = "1.7.21"
system-lambda = "1.2.1"

# Micronaut
micronaut = "3.7.4"
micronaut-docs = "2.0.0"
micronaut-test = "3.7.1"
groovy = "3.0.13"
spock = "2.2-groovy-3.0"

micronaut-gradle-plugin = "3.6.5"

[libraries]
boms-azure-sdk = { module = "com.azure:azure-sdk-bom", version.ref = "managed-azure-sdk" }

managed-azure-functions-java-library = { module = "com.microsoft.azure.functions:azure-functions-java-library", version.ref = "managed-azure-functions-java-library" }
managed-azure-cosmos = { module = "com.azure:azure-cosmos", version.ref = "managed-azure-cosmos" }

azure-identity = { module = "com.azure:azure-identity" }
azure-security-keyvault-secrets = { module = "com.azure:azure-security-keyvault-secrets" }
azure-storage-common = { module = "com.azure:azure-storage-common" }
azure-storage-blob = { module = "com.azure:azure-storage-blob" }
groovy-all = { module = "org.codehaus.groovy:groovy-all", version.ref = "groovy" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject-api" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty-server" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
system-lambda = { module = "com.github.stefanbirkner:system-lambda", version.ref = "system-lambda" }

# TestContainers

testcontainers-azure = { module = "org.testcontainers:azure" }

# Gradle

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
